/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.clean_strike

import com.clean_strike.board.BoardConfig
import com.clean_strike.input.InputInterface
import com.clean_strike.outcome.OutcomeType
import com.clean_strike.player.PlayerStats

class Game(
    val boardConfig: BoardConfig,
    private val playerStatsMutableMap: MutableMap<Int, PlayerStats>,
    private val inputInterfaceImpl: InputInterface
) {
    private val caromBoard = CaromBoard(boardConfig, playerStatsMutableMap)
    private var playerChoice = 0
    fun loop() {
        try {
            printOutcomes()
            println("Player $playerChoice, Pick a choice")
            val input = inputInterfaceImpl.getNextLine().toInt()
            val outcomeType = OutcomeType.values()[input]
            val result = caromBoard.play(playerChoice, outcomeType)
            println(result)
            val gameResult = caromBoard.gameResult()
            if (gameResult != "Game is not over") {
                println(gameResult)
                return
            }
        } catch (exception: Exception) {
            println(exception.message)
        }
        playerChoice = (playerChoice + 1) % playerStatsMutableMap.size
        loop()
    }

    private fun printOutcomes() {
        OutcomeType.values().mapIndexed { index, it -> "$index. $it" }.forEach { println(it) }
    }
}
